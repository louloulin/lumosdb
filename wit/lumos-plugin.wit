/// Lumos DataFlow插件系统的WIT定义
package lumos:plugin;

/// 数据记录结构
record data-record {
    /// 记录的唯一标识符
    id: string,
    /// 记录的来源
    source: string,
    /// 记录的时间戳
    timestamp: string,
    /// 字段映射
    fields: map<string, string>,
}

/// 提取器选项
record extractor-options {
    /// 提取操作的选项
    options: map<string, string>,
}

/// 加载器选项
record loader-options {
    /// 加载操作的选项
    options: map<string, string>,
}

/// 插件元数据
record plugin-metadata {
    /// 插件名称
    name: string,
    /// 插件版本
    version: string,
    /// 插件描述
    description: string,
    /// 插件类型
    plugin-type: plugin-type,
}

/// 插件类型枚举
enum plugin-type {
    /// 提取器插件
    extractor,
    /// 转换器插件
    transformer,
    /// 加载器插件
    loader,
    /// 全功能插件
    all,
}

/// 提取结果枚举
variant extract-result {
    /// 成功提取
    success(list<data-record>),
    /// 提取失败
    error(string),
}

/// 加载结果枚举
variant load-result {
    /// 成功加载
    success(u32),
    /// 加载失败
    error(string),
}

/// 插件接口
interface plugin {
    /// 获取插件元数据
    get-metadata: func() -> plugin-metadata;
}

/// 提取器接口
interface extractor {
    /// 从数据源提取数据
    extract: func(options: extractor-options) -> list<data-record>;
}

/// 转换器接口
interface transformer {
    /// 转换数据记录
    transform: func(records: list<data-record>) -> list<data-record>;
}

/// 加载器接口
interface loader {
    /// 加载数据到目标
    load: func(records: list<data-record>, options: loader-options) -> load-result;
}

/// 日志接口
interface logger {
    /// 记录调试信息
    debug: func(message: string);
    /// 记录信息
    info: func(message: string);
    /// 记录警告
    warn: func(message: string);
    /// 记录错误
    error: func(message: string);
}

/// 插件系统的世界接口
world plugin-world {
    /// 导出插件接口
    export plugin;
    /// 导出提取器接口
    export extractor;
    /// 导出转换器接口
    export transformer;
    /// 导出加载器接口
    export loader;

    /// 导入日志接口
    import logger;
} 